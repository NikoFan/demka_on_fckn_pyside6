ОПИСАНИЕ РАБОТЫ И ФУНЦИОНИРОВАНИЯ ПРОГРАММНОГО КОДА

Здесь расписаны основные идеи работы приложения

Пункт 1. Принцип разработки.
В процессе анализа сложившейся ситуации нам предстояло придумать основополагающий принцип разработки, на котором
будут базироваться все последующие варианты Демо-экзамена

В качестве такого принципа был выбран принцип "Шаблонов", который заключается в разработке одинаковых фреймов,
в которых различаются только наполняющие.
+ Преимущества такого принципа - Для создания нового фрейма достаточно просто перетащить код из уже созданного,
заменить в нем пару элементов и имя класса и на выходе будет новый фрейм.

Данный принцип разработки подтвердил свое право на жизнь тогда, когда я переносил код
написанный на TkInter под библиотеку PySide6

- Минусом данного подходя является скудность интерфейса. Окна не наделены собственным, уникальным,
разработанным под них специально дизайнерским решением. Они все выглядят одинаково и больше походят на формы
для заполнения / бланки. Однако это было бы весомым минусом, если бы мы вели разработку
в Коммерческих целях, а из-за того, что наша задача написать программу за 3.5 часа
(а если быть точнее то за 2 и меньше, потому что 1.5 часа уйдет на Нервы, документы, проверку и т.д.)
нам этот вариант очень даже подходит.


Пункт 2. Процесс работы программного кода.
Программный код работает по следующей схеме

QWidget() - Главное окно, на котором держится все приложение
QFrame() - Фреймы с интерфейсом

В начале создается Главное окно Application() (файл app.py)
В нем инициализируется Первый фрейм MainWindow() (файл MainWindow_frame.py)
При переходе в другие фреймы в функцию Application().show_frame() передается frame, а именно
передается Имя класса, в который хотят попасть. После чего он открывается.

Данный вариант с фреймами не дает возможность СОЗДАВАТЬ новые окна (как это привычно видеть в WPF)
однако оно нам и не нужно, так как в задании прописано, чтобы каждое окно имело кнопку "Назад"


Пункт 3. Как мы будем учиться.
Оставляю этот вариант тем кто будет УП проводить в родных стенах своей квартиры.
На момент 02.12.2025 я не знаю точно как мы будем это все постигать.
Одно мне понятно точно - тот вариант написания кода, который будут нам навязывать - ОШИБОЧЕН

Моя задача не научить вас Писать код под приложение анализа работы партнеров.
Те, кто ставили перед собой такую установку - ошибаются.
Моя задача - дать вам знания и понимание как написать любое приложение используя ОГРАНИЧЕННЫЙ объем инструментов.
Нам не надо выводить график (и надеюсь не понадобится), не надо делать диаграмму, не надо делать тумблеры
Нам надо сделать форму для заполнения и просмотра - ВСЕ

Поэтому при написании любого другого приложения в качестве подготовки к Демо-экзамену - используйте
единый стек инструментов. Это позволит запомнить все варианты взаимодействия с ним.


Также нас скорее всего будут заставлять учить ORM и QT Designer - мы не будем это учить.
Причин использовать ни 1 ни 2 инструменты у нас нет. Они были бы удобны при свободной разработке,
когда на нас не давит время - но у нас не так. Обучение этим инструментам займет
у нас время, которое выделено под тренировку, а существенного плюса не даст.


Пункт 4. Что учить.
В представленном коде есть весь необходимый функционал, который должен быть в приложении.
Я надеюсь они не добавят нам пункт - Установить фотографию из ресурсов в окно приложения
Но мы это посмотрим на УП, чтобы вы понимали куда обратиться в случае чего.

Вам следует проработать следующие моменты библиотеки:

QWidget()
QFrame()
QVBoxLayout()
QPushButton()
QTest() - Для проведения тестирования
QLabel()
QLineEdit()
QTreeWidget() - Таблица
QTreeWidgetItem() - Элемент таблицы

Также стоить проработать наследование в ООП и само ООП
Понять как и когда использовать self.
Как писать lambda _: функции
Как использовать self.controller, self.db

В этом необходимо разобраться.

Со временем здесь появится папка с презентациями и материалом (Если я буду его делать конечно)
Вполне возможно все пары будут проходить в формате разговора и пояснения по коду


Пункт 5. Тестирование.
Тестирование я провел, вроде как оно успешно. Как отобразить тесты
проведенные QTest в IDE (форматом unittest) я пока не знаю, возможно буду просто писать тесты через unittest
В любом случае это мы будем делать только весной, до этого момента надо научиться быстро писать код и создавать объекты


Пункт 6. БД.
Скрипты мы будем писать на SQL. Как уже писал выше - ORM я учить не буду, оно мне не надо здесь.
Все должны выучить SQL:

Select
from
where
join (Все)
update
set
insert into
COUNT()
SUM()
AVG()


Все что используется в коде здесь + еще информация должны быть изучены и отработаны. В качестве
тренировки пишите в SQLAcademy, там можно получить норм знания по базовым структурам. Никто не просит
форматировать ДАТУ, или исчислять количество дней между датами, но это может понадобиться.
